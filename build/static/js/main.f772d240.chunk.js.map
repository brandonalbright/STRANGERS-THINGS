{"version":3,"sources":["components/Header.js","api/index.js","components/Login.js","components/CreateNewPost.js","components/CreateNewMessage.js","components/EditPost.js","components/Posts.js","components/Message.js","components/MyPosts.js","components/App.js","index.js"],"names":["Header","props","isLoggedIn","setIsLoggedIn","clearToken","setSearchTerm","postList","setPostList","searchTerm","isRecent","setIsRecent","className","to","src","alt","type","checked","onChange","event","target","value","placeholder","onClick","BASE_URL","getToken","localStorage","getItem","removeItem","setToken","token","setItem","buildHeaders","base","auth","username","password","a","isNew","url","fetch","method","headers","body","JSON","stringify","user","response","json","error","data","Error","message","hitAPI","endpoint","bodyObj","payload","Login","history","useHistory","useState","setUsername","setPassword","errorMessage","setErrorMessage","onSubmit","preventDefault","push","CreateNewMessage","addNewPost","description","setDescription","title","setTitle","price","setPrice","location","setLocation","willDeliver","setWillDeliver","isDirty","setIsDirty","e","length","postData","post","result","console","log","style","color","postId","closeReply","textValue","setTextValue","id","objBody","content","EditPost","updatePost","closeEdit","Posts","wantsToReply","setReply","isModifyPost","setIsModifyPost","map","index","border","isAuthor","createdAt","author","_id","Button","variant","fullWidth","Message","filteredMyPosts","filter","messages","fromUser","document","getElementById","display","MyPosts","App","filteredPosts","toLowerCase","includes","Date","parse","now","reverse","updatedPost","findIndex","postListCopy","useEffect","then","posts","catch","path","newPost","ReactDOM","render"],"mappings":"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","file":"static/js/main.f772d240.chunk.js","sourcesContent":["import React, { useState, Fragment, useEffect } from 'react'\nimport './Header.css'\nimport SearchIcon from '@material-ui/icons/Search'\nimport { Link, useHistory } from 'react-router-dom'\n\nfunction Header(props) {\n  const {\n    isLoggedIn,\n    setIsLoggedIn,\n    clearToken,\n    postList,\n    setPostList,\n    searchTerm,\n    setSearchTerm,\n    isRecent,\n    setIsRecent,\n  } = props\n\n  return (\n    <nav className=\"header\">\n      <Link to=\"/\">\n        <img\n          className=\"header-logo\"\n          src=\"https://i.imgur.com/vrQimP1.png\"\n          alt=\"logo\"\n        />\n      </Link>\n\n      <div className=\"header-search\">\n        <label className=\"header-checkbox\">\n          <input\n            type=\"checkbox\"\n            checked={isRecent}\n            onChange={() => setIsRecent(!isRecent)}\n          />\n          Recent Posts Only\n        </label>\n        <input\n          type=\"text\"\n          className=\"header_searchInput\"\n          onChange={(event) => setSearchTerm(event.target.value)}\n          placeholder=\"filter posts\"\n        />\n        <SearchIcon className=\"header-searchIcon\" />\n      </div>\n\n      <div className=\"headerNav\">\n        {isLoggedIn ? (\n          <Link to=\"/posts\" className=\"header-link\">\n            <span\n              onClick={() => {\n                clearToken()\n                setIsLoggedIn(false)\n              }}\n              className=\"headerOpt-line2\"\n            >\n              Logout\n            </span>\n          </Link>\n        ) : (\n          <Link to=\"/login\" className=\"header-link\">\n            <span className=\"headerOpt-line2\">SignIn/Sign Up</span>\n          </Link>\n        )}\n      </div>\n      <div className=\"headermessages\">\n        <Link to=\"/posts\" className=\"header-link\">\n          <span> Posts</span>\n        </Link>\n        {isLoggedIn ? (\n          <Link to=\"/createNewPost\" className=\"header-link\">\n            <span>Create New Post</span>\n          </Link>\n        ) : null}\n      </div>\n      {isLoggedIn ? (\n        <div className=\"header-messages\">\n          <Link to=\"/message\" className=\"header-link\">\n            <span>Messages</span>\n          </Link>\n          <Link to=\"/myposts\" className=\"header-link\">\n            <span>My Posts</span>\n          </Link>\n        </div>\n      ) : null}\n    </nav>\n  )\n}\n\nexport default Header\n","const BASE_URL = 'https://strangers-things.herokuapp.com/api/2007-LSU-RM-WEB-PT'\n\nexport const getToken = () => {\n  if (localStorage.getItem('auth-token')) {\n    return localStorage.getItem('auth-token')\n  } else {\n    localStorage.removeItem('auth-token')\n  }\n}\n\nexport const clearToken = () => {\n  localStorage.removeItem('auth-token')\n}\n\nconst setToken = (token) => {\n  localStorage.setItem('auth-token', token)\n}\n\nfunction buildHeaders() {\n  let base = {\n    'Content-Type': 'application/json',\n  }\n\n  if (getToken()) {\n    base['Authorization'] = `Bearer ${getToken()}`\n  }\n\n  return base\n}\n\nexport const auth = async (username, password, isNew = false) => {\n  const url = `${BASE_URL}/users` + (isNew ? '/register' : '/login')\n\n  const response = await fetch(url, {\n    method: 'POST',\n    headers: buildHeaders(),\n    body: JSON.stringify({\n      user: {\n        username: username,\n        password: password,\n      },\n    }),\n  })\n\n  const { error, data } = await response.json()\n\n  if (error) {\n    throw Error(error.message)\n  }\n\n  if (data && data.token) {\n    setToken(data.token)\n  }\n\n  return data\n}\n\nexport const hitAPI = async (method, endpoint, bodyObj) => {\n  const payload = {\n    method: method,\n    headers: buildHeaders(),\n  }\n\n  if (bodyObj) {\n    payload.body = JSON.stringify(bodyObj)\n  }\n\n  const response = await fetch(`${BASE_URL}${endpoint}`, payload)\n\n  const { error, data } = await response.json()\n\n  if (error) {\n    throw Error(error.message)\n  }\n\n  if (data && data.token) {\n    setToken(data.token)\n  }\n\n  return data\n}\n","import React, { useState, Fragment } from 'react'\nimport loginUser from '../api/index'\nimport { Link, useHistory } from 'react-router-dom'\nimport { hitApi, auth } from '../api/index'\nimport './Login.css'\nimport { getToken, setToken, clearToken } from '../api/index'\nimport Header from './Header'\n\nfunction Login(props) {\n  const { setIsLoggedIn } = props\n  const history = useHistory()\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  return (\n    <div className=\"login\">\n      <div className=\"logo-login\">\n        <Link to=\"/\">\n          <img\n            className=\"header-logo\"\n            src=\"https://i.imgur.com/vrQimP1.png\"\n            alt=\"logo\"\n          />\n        </Link>\n      </div>\n\n      <div className=\"login-container\">\n        <h1>Sign In</h1>\n        <form\n          onSubmit={(event) => {\n            event.preventDefault()\n          }}\n        >\n          <h5>Email</h5>\n          {errorMessage ? <h5 className=\"error\">{errorMessage}</h5> : null}\n          <input\n            type=\"text\"\n            value={username}\n            onChange={(event) => setUsername(event.target.value)}\n            placeholder=\"username\"\n          />\n          <h5>Password</h5>\n\n          <input\n            type=\"password\"\n            value={password}\n            onChange={(event) => setPassword(event.target.value)}\n            placeholder=\"password\"\n          />\n          <button\n            className=\"login-siginbutton\"\n            onClick={async (event) => {\n              try {\n                const result = await auth(username, password)\n                setIsLoggedIn(true)\n                history.push('/posts')\n              } catch (error) {\n                setErrorMessage(error.message)\n              }\n            }}\n          >\n            Sign In\n          </button>\n          <h5>Have Account? Sign In!</h5>\n        </form>\n\n        <button\n          className=\"login-createbutton\"\n          onClick={async (event) => {\n            try {\n              const result = await auth(username, password, true)\n              setIsLoggedIn(true)\n              history.push('/posts')\n            } catch (error) {\n              setErrorMessage(error.message)\n            }\n          }}\n        >\n          Create your account\n        </button>\n        <h5>Don't have account? Sign Up!</h5>\n      </div>\n    </div>\n  )\n}\n\nexport default Login\n","import React, { useState } from 'react'\nimport './CreateNewPost.css'\nimport { hitAPI } from '../api/index'\nimport { useHistory } from 'react-router-dom'\n\nfunction CreateNewMessage(props) {\n  const { addNewPost } = props\n  const [description, setDescription] = useState('')\n  const [title, setTitle] = useState('')\n  const [price, setPrice] = useState('')\n  const [location, setLocation] = useState('')\n  const [willDeliver, setWillDeliver] = useState(false)\n  const history = useHistory()\n  const [isDirty, setIsDirty] = useState(false)\n\n  return (\n    <div className=\"createNewMessage\">\n      <form\n        onSubmit={async (e) => {\n          event.preventDefault()\n\n          setIsDirty(true)\n\n          if (title.length === 0) {\n            setIsDirty(true)\n            return\n          }\n\n          if (description.length === 0) {\n            setIsDirty(true)\n            return\n          }\n          const postData = {\n            post: {\n              title: title,\n              description: description,\n              price: price,\n              willDeliver: willDeliver,\n              location: location,\n            },\n          }\n\n          try {\n            const result = await hitAPI('POST', '/posts', postData)\n            addNewPost(result.post)\n            console.log(result)\n          } catch (error) {\n            console.error(error)\n          }\n          setDescription('')\n          setPrice('')\n          setTitle('')\n          setWillDeliver('')\n          setLocation('')\n\n          history.push('/posts')\n        }}\n      >\n        <h3>Title:</h3>\n        <input\n          value={title}\n          onChange={(event) => {\n            setTitle(event.target.value)\n          }}\n          type=\"text\"\n        />\n        {isDirty && title.length === 0 ? (\n          <h3 style={{ color: 'red' }}>You need a title</h3>\n        ) : null}\n        <h3>Description:</h3>\n        <textarea\n          value={description}\n          onChange={(e) => {\n            setDescription(e.target.value)\n          }}\n          type=\"text\"\n        />\n        {isDirty && description.length === 0 ? (\n          <h3 style={{ color: 'red' }}>You need a description</h3>\n        ) : null}\n        <h3>Price</h3>\n\n        <input\n          value={price}\n          onChange={(e) => {\n            setPrice(e.target.value)\n          }}\n          type=\"text\"\n        />\n\n        <h3>Location</h3>\n        <input\n          placeholder=\"location, leave blank for [On Request]\"\n          value={location}\n          onChange={(event) => {\n            setLocation(event.target.value)\n          }}\n          type=\"text\"\n        />\n\n        <h3>Will Deliver</h3>\n        <input\n          value={willDeliver}\n          onChange={(event) => {\n            setWillDeliver(!willDeliver)\n          }}\n          type=\"checkbox\"\n        />\n        <button>Post It</button>\n      </form>\n    </div>\n  )\n}\n\nexport default CreateNewMessage\n","import React, { useState } from 'react'\nimport './CreateNewMessage.css'\nimport { hitAPI } from '../api'\nimport CancelIcon from '@material-ui/icons/Cancel'\n\nfunction CreateNewMessage(props) {\n  const { postId, closeReply } = props\n\n  const [textValue, setTextValue] = useState('')\n\n  return (\n    <div id=\"message-form\" className=\"new-message\">\n      <form\n        onSubmit={async (event) => {\n          event.preventDefault()\n          const objBody = {\n            message: {\n              content: textValue,\n            },\n          }\n          const result = await hitAPI(\n            'POST',\n            `/posts/${postId}/messages`,\n            objBody,\n          )\n\n          setTextValue('')\n          closeReply()\n        }}\n      >\n        <CancelIcon\n          onClick={() => {\n            closeReply()\n          }}\n        />\n        <textarea\n          value={textValue}\n          onChange={(event) => setTextValue(event.target.value)}\n        ></textarea>\n        <button>Send</button>\n      </form>\n    </div>\n  )\n}\n\nexport default CreateNewMessage\n","import React, { useState } from 'react'\nimport './CreateNewPost.css'\nimport CancelIcon from '@material-ui/icons/Cancel'\nimport { useHistory } from 'react-router-dom'\nimport { hitAPI } from '../api'\n\nfunction EditPost(props) {\n  const [description, setDescription] = useState(props.description || '')\n  const [title, setTitle] = useState(props.title || '')\n  const [price, setPrice] = useState(props.price || '')\n  const [location, setLocation] = useState(props.location || '')\n  const [willDeliver, setWillDeliver] = useState(props.willDeliver || false)\n  const history = useHistory()\n  const { setPostList, updatePost, postId, closeEdit } = props\n\n  return (\n    <div id=\"form\" className=\"createNewMessage\">\n      <form\n        onSubmit={async (e) => {\n          event.preventDefault()\n\n          const postData = {\n            post: {\n              title: title,\n              description: description,\n              price: price,\n              willDeliver: willDeliver,\n              location: location,\n            },\n          }\n\n          try {\n            const result = await hitAPI('PATCH', `/posts/${postId}`, postData)\n            updatePost(result.post)\n          } catch (error) {\n            console.error(error)\n          }\n\n          setDescription('')\n          setPrice('')\n          setTitle('')\n          setWillDeliver(false)\n          setLocation('')\n          closeEdit()\n          history.push('/posts')\n        }}\n      >\n        <CancelIcon\n          onClick={() => {\n            closeEdit()\n            history.push('/posts')\n          }}\n        />\n        <h3>Title:</h3>\n        <input\n          value={title}\n          onChange={(event) => {\n            setTitle(event.target.value)\n          }}\n          type=\"text\"\n        />\n        <h3>Description:</h3>\n        <textarea\n          value={description}\n          onChange={(e) => {\n            setDescription(e.target.value)\n          }}\n          type=\"text\"\n        />\n        <h3>Price</h3>\n\n        <input\n          value={price}\n          onChange={(e) => {\n            setPrice(e.target.value)\n          }}\n          type=\"text\"\n        />\n\n        <h3>Location</h3>\n        <input\n          value={location}\n          onChange={(event) => {\n            setLocation(event.target.value)\n          }}\n          type=\"text\"\n        />\n\n        <h3>Will Deliver</h3>\n        <input\n          value={willDeliver}\n          onChange={(event) => {\n            setWillDeliver(!willDeliver)\n          }}\n          type=\"checkbox\"\n        />\n        <button>Update</button>\n      </form>\n    </div>\n  )\n}\n\nexport default EditPost\n","import zIndex from '@material-ui/core/styles/zIndex'\nimport React, { useState, Fragment } from 'react'\nimport './Posts.css'\nimport { Button } from '@material-ui/core'\nimport { hitAPI } from '../api'\nimport AddCircleIcon from '@material-ui/icons/AddCircle'\nimport CreateNewPost from './CreateNewPost'\nimport Fab from '@material-ui/core/Fab'\nimport AddIcon from '@material-ui/icons/Add'\nimport CreateNewMessage from './CreateNewMessage'\nimport EditPost from './EditPost'\n\nfunction Posts(props) {\n  const { postList, setPostList, isLoggedIn, updatePost, addNewPost } = props\n\n  const [wantsToReply, setReply] = useState(null)\n\n  const [isModifyPost, setIsModifyPost] = useState(null)\n\n  return (\n    <div id=\"posts\">\n      {postList.map((post, index) => {\n        return (\n          <div\n            id=\"post-card\"\n            key={index}\n            style={{\n              border:\n                post.isAuthor && isLoggedIn\n                  ? '5px solid gold'\n                  : '2px solid rgb(156, 221, 156',\n            }}\n          >\n            <div className=\"card-title\">\n              <h3>\n                {post.title} ({post.location}) [{post.createdAt}]\n              </h3>\n              <h3>Posted Price: {post.price}</h3>\n            </div>\n            <div className=\"descriptions\">\n              <h5>Description: {post.description}</h5>\n              <h5>Delivery available: {post.willDeliver ? 'YES' : 'NO'}</h5>\n              <h5>Posted by: {post.author.username}</h5>\n            </div>\n            {wantsToReply === post._id ? (\n              <CreateNewMessage\n                postId={post._id}\n                closeReply={() => setReply(null)}\n              />\n            ) : null}\n            {isModifyPost === post._id ? (\n              <EditPost\n                title={post.title}\n                description={post.description}\n                price={post.price}\n                location={post.location}\n                willDeliver={post.willDeliver}\n                postId={post._id}\n                updatePost={updatePost}\n                closeEdit={() => setIsModifyPost(null)}\n              />\n            ) : null}\n\n            <div className=\"message\">\n              {post.isAuthor ? (\n                <Fragment>\n                  <Button\n                    onClick={async () => {\n                      try {\n                        const data = await hitAPI(\n                          'DELETE',\n                          `/posts/${post._id}`,\n                        )\n\n                        setPostList([...postList])\n                      } catch (err) {\n                        console.error(err)\n                      }\n                    }}\n                    variant=\"outlined\"\n                    color=\"secondary\"\n                    fullWidth\n                  >\n                    Delete\n                  </Button>\n                  <Button\n                    onClick={() => {\n                      setIsModifyPost(post._id)\n                    }}\n                    variant=\"outlined\"\n                    color=\"secondary\"\n                    fullWidth\n                  >\n                    Edit\n                  </Button>\n                </Fragment>\n              ) : isLoggedIn ? (\n                <Button\n                  onClick={() => setReply(post._id)}\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  fullWidth\n                >\n                  Message Seller\n                </Button>\n              ) : null}\n            </div>\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default Posts\n","import React from 'react'\nimport './Message.css'\n\nfunction Message(props) {\n  const { postList } = props\n  function filteredMyPosts() {\n    filteredMyPosts = postList.filter((post) => {\n      return post.isAuthor\n    })\n    return filteredMyPosts\n  }\n  return filteredMyPosts().map((post, index) => {\n    if (post.messages.length > 0) {\n      return (\n        <div id=\"message-close\" className=\"incoming-messages\" key={index}>\n          <h4 className=\"message-title\">Messages for Post: {post.title}</h4>\n          {post.messages.map((message, index) => {\n            return (\n              <p className=\"message12\" key={index}>\n                <strong>{index + 1}. </strong> {message.content}{' '}\n                <strong> From: </strong> {message.fromUser.username}\n              </p>\n            )\n          })}\n          <button\n            onClick={() =>\n              (document.getElementById('message-close').style.display = 'none')\n            }\n          >\n            Cancel\n          </button>\n        </div>\n      )\n    } else {\n      return null\n    }\n  })\n}\nexport default Message\n","import React, { useState } from 'react'\nimport Posts from './Posts'\n\nfunction MyPosts(props) {\n  const { postList, setPostList, updatePost } = props\n\n  function filteredMyPosts() {\n    const filteredMyPosts = postList.filter((post) => {\n      return post.isAuthor\n    })\n    return filteredMyPosts\n  }\n\n  return (\n    <>\n      <Posts\n        postList={filteredMyPosts()}\n        setPostList={setPostList}\n        updatePost={updatePost}\n      />\n    </>\n  )\n}\n\nexport default MyPosts\n","import React, { useState, useEffect } from 'react'\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom'\nimport Header from './Header'\nimport Login from './Login'\nimport Posts from './Posts'\nimport Message from './Message'\nimport MyPosts from './MyPosts'\nimport './Header.css'\nimport { getToken, clearToken } from '../api/index'\nimport { hitAPI, auth } from '../api/index'\nimport CreateNewPost from './CreateNewPost'\nimport CreateNewMessage from './CreateNewMessage'\nimport EditPost from './EditPost'\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(!!getToken())\n  const [postList, setPostList] = useState([])\n\n  const [searchTerm, setSearchTerm] = useState('')\n  const [isRecent, setIsRecent] = useState(false)\n\n  function addNewPost(newPost) {\n    return setPostList([...postList, newPost])\n  }\n\n  function filteredPosts() {\n    const postsFilteredBySearchTerm = postList.filter((post) => {\n      return post.title.toLowerCase().includes(searchTerm.toLowerCase())\n    })\n\n    const recentPosts = postsFilteredBySearchTerm.filter((post) => {\n      if (!isRecent) {\n        return true\n      }\n\n      const postTime = Date.parse(post.createdAt)\n      const nowTime = Date.now()\n      const THREE_HOURS = 1000 * 60 * 60 * 3\n\n      return postTime + THREE_HOURS >= nowTime\n    })\n\n    return recentPosts.reverse()\n  }\n\n  function updatePost(updatedPost) {\n    let index = postList.findIndex((post) => {\n      return post._id === updatedPost._id\n    })\n\n    if (index > -1) {\n      let postListCopy = [...postList]\n      postListCopy[index] = updatedPost\n      setPostList(postListCopy)\n    }\n  }\n\n  useEffect(() => {\n    hitAPI('GET', '/posts')\n      .then((data) => {\n        const { posts } = data\n        setPostList(posts)\n      })\n      .catch(console.error)\n  }, [isLoggedIn])\n\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <Route path=\"/login\">\n            <Login setIsLoggedIn={setIsLoggedIn} />\n          </Route>\n          <Route path=\"/posts\">\n            <Header\n              isLoggedIn={isLoggedIn}\n              setIsLoggedIn={setIsLoggedIn}\n              clearToken={clearToken}\n              postList={postList}\n              setPostList={setPostList}\n              searchTerm={searchTerm}\n              setSearchTerm={setSearchTerm}\n              isRecent={isRecent}\n              setIsRecent={setIsRecent}\n            />\n\n            <Posts\n              postList={filteredPosts()}\n              setPostList={setPostList}\n              isLoggedIn={isLoggedIn}\n              updatePost={updatePost}\n            />\n          </Route>\n          <Route path=\"/comment\">\n            <Header\n              isLoggedIn={isLoggedIn}\n              setIsLoggedIn={setIsLoggedIn}\n              clearToken={clearToken}\n              searchTerm={searchTerm}\n              setSearchTerm={setSearchTerm}\n              isRecent={isRecent}\n              setIsRecent={setIsRecent}\n            />\n\n            <CreateNewMessage postList={postList} />\n          </Route>\n          <Route path=\"/message\">\n            <Header\n              isLoggedIn={isLoggedIn}\n              setIsLoggedIn={setIsLoggedIn}\n              clearToken={clearToken}\n              searchTerm={searchTerm}\n              setSearchTerm={setSearchTerm}\n              isRecent={isRecent}\n              setIsRecent={setIsRecent}\n            />\n            <Message postList={postList} />\n          </Route>\n          <Route path=\"/myposts\">\n            <Header\n              isLoggedIn={isLoggedIn}\n              setIsLoggedIn={setIsLoggedIn}\n              clearToken={clearToken}\n              searchTerm={searchTerm}\n              setSearchTerm={setSearchTerm}\n              isRecent={isRecent}\n              setIsRecent={setIsRecent}\n            />\n\n            <MyPosts\n              postList={filteredPosts()}\n              isLoggedIn={isLoggedIn}\n              setPostList={filteredPosts}\n              updatePost={updatePost}\n            />\n          </Route>\n          <Route path=\"/createNewPost\">\n            <Header\n              isLoggedIn={isLoggedIn}\n              setIsLoggedIn={setIsLoggedIn}\n              clearToken={clearToken}\n              searchTerm={searchTerm}\n              setSearchTerm={setSearchTerm}\n              isRecent={isRecent}\n              setIsRecent={setIsRecent}\n            />\n            <CreateNewPost addNewPost={addNewPost} />\n          </Route>\n          <Route path=\"/\">\n            <Header\n              isLoggedIn={isLoggedIn}\n              setIsLoggedIn={setIsLoggedIn}\n              clearToken={clearToken}\n              searchTerm={searchTerm}\n              setSearchTerm={setSearchTerm}\n              isRecent={isRecent}\n              setIsRecent={setIsRecent}\n            />\n            <Posts\n              postList={filteredPosts()}\n              setPostList={setPostList}\n              isLoggedIn={isLoggedIn}\n              updatePost={updatePost}\n            />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  )\n}\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App'\n\nReactDOM.render(<App />, document.getElementById('app'))\n"],"sourceRoot":""}